{"ast":null,"code":"var _jsxFileName = \"/home/mayankawasthi/UNIV_FitnessTrackr_FrontEnd/src/components/CreateActivities.js\",\n    _s = $RefreshSig$();\n\nimport { async } from \"q\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateActivities = _ref => {\n  _s();\n\n  let {\n    activities\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleActivitiesSubmit = async event => {\n    event.preventDefault();\n    const existingActivity = activities.filter(activity => activity.name);\n\n    if (existingActivity !== name) {\n      const response = await fetch(\"https://fathomless-ocean-09578.herokuapp.com/api/activities\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"Application/json\"\n        },\n        body: JSON.stringify({\n          name: name,\n          description: description\n        })\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n      }).catch(console.error);\n    } else {\n      alert(\"This activity is already exist\");\n    }\n\n    setName(\"\");\n    setDescription(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"myactivities\",\n      children: \"Create your own Activities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleActivitiesSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nameOfActivity\",\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name your Activity\",\n        value: name,\n        onChange: event => {\n          setName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"descriptionOfActivity\",\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description of your Activity\",\n        value: description,\n        onChange: event => {\n          setDescription(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        tpye: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateActivities, \"B+aarL2rK4NEtohT3EgIL4Htz10=\");\n\n_c = CreateActivities;\nexport default CreateActivities;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateActivities\");","map":{"version":3,"sources":["/home/mayankawasthi/UNIV_FitnessTrackr_FrontEnd/src/components/CreateActivities.js"],"names":["async","React","useState","CreateActivities","activities","name","setName","description","setDescription","handleActivitiesSubmit","event","preventDefault","existingActivity","filter","activity","response","fetch","method","headers","body","JSON","stringify","then","json","result","console","log","catch","error","alert","target","value"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,GAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,gBAAgB,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMO,sBAAsB,GAAG,MAAMC,KAAN,IAAgB;AAC3CA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,gBAAgB,GAAGR,UAAU,CAACS,MAAX,CAAmBC,QAAQ,IAAIA,QAAQ,CAACT,IAAxC,CAAzB;;AAEA,QAAGO,gBAAgB,KAAKP,IAAxB,EAA8B;AAC1B,YAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,6DAAD,EAAgE;AACxFC,QAAAA,MAAM,EAAE,MADgF;AAExFC,QAAAA,OAAO,EAAE;AACL,0BAAiB;AADZ,SAF+E;AAMxFC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBhB,UAAAA,IAAI,EAAEA,IADW;AAEjBE,UAAAA,WAAW,EAAEA;AAFI,SAAf;AANkF,OAAhE,CAAL,CAUpBe,IAVoB,CAUfP,QAAQ,IAAIA,QAAQ,CAACQ,IAAT,EAVG,EAWpBD,IAXoB,CAWfE,MAAM,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,OAboB,EAcpBG,KAdoB,CAcdF,OAAO,CAACG,KAdM,CAAvB;AAeH,KAhBD,MAgBO;AACHC,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;;AAEDvB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACH,GA3BD;;AA6BA,sBACI;AAAA,4BACI;AAAI,MAAA,EAAE,EAAG,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAM,MAAA,QAAQ,EAAIC,sBAAlB;AAAA,8BAEI;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,WAAW,EAAG,oBAAnC;AACO,QAAA,KAAK,EAAIJ,IADhB;AAEO,QAAA,QAAQ,EAAKK,KAAD,IAAW;AAACJ,UAAAA,OAAO,CAACI,KAAK,CAACoB,MAAN,CAAaC,KAAd,CAAP;AAA4B;AAF3D;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI;AAAO,QAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,WAAW,EAAG,8BAAnC;AACO,QAAA,KAAK,EAAIxB,WADhB;AAEO,QAAA,QAAQ,EAAKG,KAAD,IAAW;AAACF,UAAAA,cAAc,CAACE,KAAK,CAACoB,MAAN,CAAaC,KAAd,CAAd;AAAmC;AAFlE;AAAA;AAAA;AAAA;AAAA,cATJ,eAcI;AAAQ,QAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAuBH,CAxDD;;GAAM5B,gB;;KAAAA,gB;AA0DN,eAAeA,gBAAf","sourcesContent":["import { async } from \"q\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst CreateActivities = ({ activities }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    const handleActivitiesSubmit = async(event) => {\r\n        event.preventDefault()\r\n\r\n        const existingActivity = activities.filter((activity => activity.name))\r\n\r\n        if(existingActivity !== name) {\r\n            const response = await fetch(\"https://fathomless-ocean-09578.herokuapp.com/api/activities\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\" : \"Application/json\",\r\n\r\n                },\r\n                body: JSON.stringify({\r\n                    name: name,\r\n                    description: description\r\n                })\r\n            }).then(response => response.json())\r\n              .then(result => {\r\n                  console.log(result);\r\n              })\r\n              .catch(console.error)\r\n        } else {\r\n            alert(\"This activity is already exist\")\r\n        }\r\n\r\n        setName(\"\")\r\n        setDescription(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 id = \"myactivities\">Create your own Activities</h1>\r\n\r\n            <form onSubmit = {handleActivitiesSubmit}>\r\n\r\n                <label htmlFor=\"nameOfActivity\">Name: </label>\r\n                <input type = \"text\" placeholder = \"Name your Activity\"\r\n                       value = {name}\r\n                       onChange = {(event) => {setName(event.target.value)}}>\r\n                </input>\r\n\r\n                <label htmlFor=\"descriptionOfActivity\">Description: </label>\r\n                <input type = \"text\" placeholder = \"Description of your Activity\"\r\n                       value = {description}\r\n                       onChange = {(event) => {setDescription(event.target.value)}}>\r\n                </input>\r\n\r\n                <button tpye = \"submit\">Submit</button>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateActivities;"]},"metadata":{},"sourceType":"module"}